#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.34014
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gestion_Parc_Informatique
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ParcInformatique")]
	public partial class Base_DonneeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertEntite(Entite instance);
    partial void UpdateEntite(Entite instance);
    partial void DeleteEntite(Entite instance);
    partial void InsertUtilisateur_ServiceCentre(Utilisateur_ServiceCentre instance);
    partial void UpdateUtilisateur_ServiceCentre(Utilisateur_ServiceCentre instance);
    partial void DeleteUtilisateur_ServiceCentre(Utilisateur_ServiceCentre instance);
    partial void InsertMateriele(Materiele instance);
    partial void UpdateMateriele(Materiele instance);
    partial void DeleteMateriele(Materiele instance);
    partial void InsertService_Centre(Service_Centre instance);
    partial void UpdateService_Centre(Service_Centre instance);
    partial void DeleteService_Centre(Service_Centre instance);
    partial void InsertTypeMateriel(TypeMateriel instance);
    partial void UpdateTypeMateriel(TypeMateriel instance);
    partial void DeleteTypeMateriel(TypeMateriel instance);
    partial void InsertUtili_Materil_Entite(Utili_Materil_Entite instance);
    partial void UpdateUtili_Materil_Entite(Utili_Materil_Entite instance);
    partial void DeleteUtili_Materil_Entite(Utili_Materil_Entite instance);
    partial void InsertUtilisateur(Utilisateur instance);
    partial void UpdateUtilisateur(Utilisateur instance);
    partial void DeleteUtilisateur(Utilisateur instance);
    #endregion
		
		public Base_DonneeDataContext() : 
				base(global::Gestion_Parc_Informatique.Properties.Settings.Default.ParcInformatiqueConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Base_DonneeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Base_DonneeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Base_DonneeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Base_DonneeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Entite> Entite
		{
			get
			{
				return this.GetTable<Entite>();
			}
		}
		
		public System.Data.Linq.Table<Utilisateur_ServiceCentre> Utilisateur_ServiceCentre
		{
			get
			{
				return this.GetTable<Utilisateur_ServiceCentre>();
			}
		}
		
		public System.Data.Linq.Table<Materiele> Materiele
		{
			get
			{
				return this.GetTable<Materiele>();
			}
		}
		
		public System.Data.Linq.Table<Service_Centre> Service_Centre
		{
			get
			{
				return this.GetTable<Service_Centre>();
			}
		}
		
		public System.Data.Linq.Table<TypeMateriel> TypeMateriel
		{
			get
			{
				return this.GetTable<TypeMateriel>();
			}
		}
		
		public System.Data.Linq.Table<Utili_Materil_Entite> Utili_Materil_Entite
		{
			get
			{
				return this.GetTable<Utili_Materil_Entite>();
			}
		}
		
		public System.Data.Linq.Table<Utilisateur> Utilisateur
		{
			get
			{
				return this.GetTable<Utilisateur>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Entite")]
	public partial class Entite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodEntite;
		
		private string _Entite1;
		
		private EntitySet<Utilisateur> _Utilisateur;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodEntiteChanging(int value);
    partial void OnCodEntiteChanged();
    partial void OnEntite1Changing(string value);
    partial void OnEntite1Changed();
    #endregion
		
		public Entite()
		{
			this._Utilisateur = new EntitySet<Utilisateur>(new Action<Utilisateur>(this.attach_Utilisateur), new Action<Utilisateur>(this.detach_Utilisateur));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodEntite", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CodEntite
		{
			get
			{
				return this._CodEntite;
			}
			set
			{
				if ((this._CodEntite != value))
				{
					this.OnCodEntiteChanging(value);
					this.SendPropertyChanging();
					this._CodEntite = value;
					this.SendPropertyChanged("CodEntite");
					this.OnCodEntiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Entite", Storage="_Entite1", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Entite1
		{
			get
			{
				return this._Entite1;
			}
			set
			{
				if ((this._Entite1 != value))
				{
					this.OnEntite1Changing(value);
					this.SendPropertyChanging();
					this._Entite1 = value;
					this.SendPropertyChanged("Entite1");
					this.OnEntite1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entite_Utilisateur", Storage="_Utilisateur", ThisKey="CodEntite", OtherKey="CodEntite")]
		public EntitySet<Utilisateur> Utilisateur
		{
			get
			{
				return this._Utilisateur;
			}
			set
			{
				this._Utilisateur.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Utilisateur(Utilisateur entity)
		{
			this.SendPropertyChanging();
			entity.Entite = this;
		}
		
		private void detach_Utilisateur(Utilisateur entity)
		{
			this.SendPropertyChanging();
			entity.Entite = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Utilisateur_ServiceCentre")]
	public partial class Utilisateur_ServiceCentre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Matricule;
		
		private int _CodeServiceCentre;
		
		private EntityRef<Service_Centre> _Service_Centre;
		
		private EntityRef<Utilisateur> _Utilisateur;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMatriculeChanging(int value);
    partial void OnMatriculeChanged();
    partial void OnCodeServiceCentreChanging(int value);
    partial void OnCodeServiceCentreChanged();
    #endregion
		
		public Utilisateur_ServiceCentre()
		{
			this._Service_Centre = default(EntityRef<Service_Centre>);
			this._Utilisateur = default(EntityRef<Utilisateur>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matricule", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Matricule
		{
			get
			{
				return this._Matricule;
			}
			set
			{
				if ((this._Matricule != value))
				{
					if (this._Utilisateur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMatriculeChanging(value);
					this.SendPropertyChanging();
					this._Matricule = value;
					this.SendPropertyChanged("Matricule");
					this.OnMatriculeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeServiceCentre", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodeServiceCentre
		{
			get
			{
				return this._CodeServiceCentre;
			}
			set
			{
				if ((this._CodeServiceCentre != value))
				{
					if (this._Service_Centre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeServiceCentreChanging(value);
					this.SendPropertyChanging();
					this._CodeServiceCentre = value;
					this.SendPropertyChanged("CodeServiceCentre");
					this.OnCodeServiceCentreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Centre_Utilisateur_ServiceCentre", Storage="_Service_Centre", ThisKey="CodeServiceCentre", OtherKey="CodeServiceCentre", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Service_Centre Service_Centre
		{
			get
			{
				return this._Service_Centre.Entity;
			}
			set
			{
				Service_Centre previousValue = this._Service_Centre.Entity;
				if (((previousValue != value) 
							|| (this._Service_Centre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service_Centre.Entity = null;
						previousValue.Utilisateur_ServiceCentre.Remove(this);
					}
					this._Service_Centre.Entity = value;
					if ((value != null))
					{
						value.Utilisateur_ServiceCentre.Add(this);
						this._CodeServiceCentre = value.CodeServiceCentre;
					}
					else
					{
						this._CodeServiceCentre = default(int);
					}
					this.SendPropertyChanged("Service_Centre");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilisateur_Utilisateur_ServiceCentre", Storage="_Utilisateur", ThisKey="Matricule", OtherKey="Matricule", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Utilisateur Utilisateur
		{
			get
			{
				return this._Utilisateur.Entity;
			}
			set
			{
				Utilisateur previousValue = this._Utilisateur.Entity;
				if (((previousValue != value) 
							|| (this._Utilisateur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilisateur.Entity = null;
						previousValue.Utilisateur_ServiceCentre.Remove(this);
					}
					this._Utilisateur.Entity = value;
					if ((value != null))
					{
						value.Utilisateur_ServiceCentre.Add(this);
						this._Matricule = value.Matricule;
					}
					else
					{
						this._Matricule = default(int);
					}
					this.SendPropertyChanged("Utilisateur");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Materiele")]
	public partial class Materiele : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodeONEE;
		
		private string _CodeTypeMateriel;
		
		private string _Marque;
		
		private string _Modelle;
		
		private string _NumeroSerie;
		
		private string _Recouvrement;
		
		private string _GestionExperientielle;
		
		private string _gestionAbonnes;
		
		private string _Utilisation;
		
		private EntitySet<Utili_Materil_Entite> _Utili_Materil_Entite;
		
		private EntityRef<TypeMateriel> _TypeMateriel;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeONEEChanging(string value);
    partial void OnCodeONEEChanged();
    partial void OnCodeTypeMaterielChanging(string value);
    partial void OnCodeTypeMaterielChanged();
    partial void OnMarqueChanging(string value);
    partial void OnMarqueChanged();
    partial void OnModelleChanging(string value);
    partial void OnModelleChanged();
    partial void OnNumeroSerieChanging(string value);
    partial void OnNumeroSerieChanged();
    partial void OnRecouvrementChanging(string value);
    partial void OnRecouvrementChanged();
    partial void OnGestionExperientielleChanging(string value);
    partial void OnGestionExperientielleChanged();
    partial void OngestionAbonnesChanging(string value);
    partial void OngestionAbonnesChanged();
    partial void OnUtilisationChanging(string value);
    partial void OnUtilisationChanged();
    #endregion
		
		public Materiele()
		{
			this._Utili_Materil_Entite = new EntitySet<Utili_Materil_Entite>(new Action<Utili_Materil_Entite>(this.attach_Utili_Materil_Entite), new Action<Utili_Materil_Entite>(this.detach_Utili_Materil_Entite));
			this._TypeMateriel = default(EntityRef<TypeMateriel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeONEE", DbType="VarChar(60) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodeONEE
		{
			get
			{
				return this._CodeONEE;
			}
			set
			{
				if ((this._CodeONEE != value))
				{
					this.OnCodeONEEChanging(value);
					this.SendPropertyChanging();
					this._CodeONEE = value;
					this.SendPropertyChanged("CodeONEE");
					this.OnCodeONEEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTypeMateriel", DbType="VarChar(6)")]
		public string CodeTypeMateriel
		{
			get
			{
				return this._CodeTypeMateriel;
			}
			set
			{
				if ((this._CodeTypeMateriel != value))
				{
					if (this._TypeMateriel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeTypeMaterielChanging(value);
					this.SendPropertyChanging();
					this._CodeTypeMateriel = value;
					this.SendPropertyChanged("CodeTypeMateriel");
					this.OnCodeTypeMaterielChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marque", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Marque
		{
			get
			{
				return this._Marque;
			}
			set
			{
				if ((this._Marque != value))
				{
					this.OnMarqueChanging(value);
					this.SendPropertyChanging();
					this._Marque = value;
					this.SendPropertyChanged("Marque");
					this.OnMarqueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modelle", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Modelle
		{
			get
			{
				return this._Modelle;
			}
			set
			{
				if ((this._Modelle != value))
				{
					this.OnModelleChanging(value);
					this.SendPropertyChanging();
					this._Modelle = value;
					this.SendPropertyChanged("Modelle");
					this.OnModelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroSerie", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string NumeroSerie
		{
			get
			{
				return this._NumeroSerie;
			}
			set
			{
				if ((this._NumeroSerie != value))
				{
					this.OnNumeroSerieChanging(value);
					this.SendPropertyChanging();
					this._NumeroSerie = value;
					this.SendPropertyChanged("NumeroSerie");
					this.OnNumeroSerieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recouvrement", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string Recouvrement
		{
			get
			{
				return this._Recouvrement;
			}
			set
			{
				if ((this._Recouvrement != value))
				{
					this.OnRecouvrementChanging(value);
					this.SendPropertyChanging();
					this._Recouvrement = value;
					this.SendPropertyChanged("Recouvrement");
					this.OnRecouvrementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GestionExperientielle", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string GestionExperientielle
		{
			get
			{
				return this._GestionExperientielle;
			}
			set
			{
				if ((this._GestionExperientielle != value))
				{
					this.OnGestionExperientielleChanging(value);
					this.SendPropertyChanging();
					this._GestionExperientielle = value;
					this.SendPropertyChanged("GestionExperientielle");
					this.OnGestionExperientielleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gestionAbonnes", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string gestionAbonnes
		{
			get
			{
				return this._gestionAbonnes;
			}
			set
			{
				if ((this._gestionAbonnes != value))
				{
					this.OngestionAbonnesChanging(value);
					this.SendPropertyChanging();
					this._gestionAbonnes = value;
					this.SendPropertyChanged("gestionAbonnes");
					this.OngestionAbonnesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Utilisation", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Utilisation
		{
			get
			{
				return this._Utilisation;
			}
			set
			{
				if ((this._Utilisation != value))
				{
					this.OnUtilisationChanging(value);
					this.SendPropertyChanging();
					this._Utilisation = value;
					this.SendPropertyChanged("Utilisation");
					this.OnUtilisationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Materiele_Utili_Materil_Entite", Storage="_Utili_Materil_Entite", ThisKey="CodeONEE", OtherKey="CodeONEE")]
		public EntitySet<Utili_Materil_Entite> Utili_Materil_Entite
		{
			get
			{
				return this._Utili_Materil_Entite;
			}
			set
			{
				this._Utili_Materil_Entite.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeMateriel_Materiele", Storage="_TypeMateriel", ThisKey="CodeTypeMateriel", OtherKey="CodeTypeMateriel", IsForeignKey=true, DeleteRule="CASCADE")]
		public TypeMateriel TypeMateriel
		{
			get
			{
				return this._TypeMateriel.Entity;
			}
			set
			{
				TypeMateriel previousValue = this._TypeMateriel.Entity;
				if (((previousValue != value) 
							|| (this._TypeMateriel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypeMateriel.Entity = null;
						previousValue.Materiele.Remove(this);
					}
					this._TypeMateriel.Entity = value;
					if ((value != null))
					{
						value.Materiele.Add(this);
						this._CodeTypeMateriel = value.CodeTypeMateriel;
					}
					else
					{
						this._CodeTypeMateriel = default(string);
					}
					this.SendPropertyChanged("TypeMateriel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Utili_Materil_Entite(Utili_Materil_Entite entity)
		{
			this.SendPropertyChanging();
			entity.Materiele = this;
		}
		
		private void detach_Utili_Materil_Entite(Utili_Materil_Entite entity)
		{
			this.SendPropertyChanging();
			entity.Materiele = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Service_Centre")]
	public partial class Service_Centre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodeServiceCentre;
		
		private string _ServiceCentre;
		
		private string _M2t;
		
		private EntitySet<Utilisateur_ServiceCentre> _Utilisateur_ServiceCentre;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeServiceCentreChanging(int value);
    partial void OnCodeServiceCentreChanged();
    partial void OnServiceCentreChanging(string value);
    partial void OnServiceCentreChanged();
    partial void OnM2tChanging(string value);
    partial void OnM2tChanged();
    #endregion
		
		public Service_Centre()
		{
			this._Utilisateur_ServiceCentre = new EntitySet<Utilisateur_ServiceCentre>(new Action<Utilisateur_ServiceCentre>(this.attach_Utilisateur_ServiceCentre), new Action<Utilisateur_ServiceCentre>(this.detach_Utilisateur_ServiceCentre));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeServiceCentre", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CodeServiceCentre
		{
			get
			{
				return this._CodeServiceCentre;
			}
			set
			{
				if ((this._CodeServiceCentre != value))
				{
					this.OnCodeServiceCentreChanging(value);
					this.SendPropertyChanging();
					this._CodeServiceCentre = value;
					this.SendPropertyChanged("CodeServiceCentre");
					this.OnCodeServiceCentreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCentre", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string ServiceCentre
		{
			get
			{
				return this._ServiceCentre;
			}
			set
			{
				if ((this._ServiceCentre != value))
				{
					this.OnServiceCentreChanging(value);
					this.SendPropertyChanging();
					this._ServiceCentre = value;
					this.SendPropertyChanged("ServiceCentre");
					this.OnServiceCentreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M2t", DbType="Char(3)")]
		public string M2t
		{
			get
			{
				return this._M2t;
			}
			set
			{
				if ((this._M2t != value))
				{
					this.OnM2tChanging(value);
					this.SendPropertyChanging();
					this._M2t = value;
					this.SendPropertyChanged("M2t");
					this.OnM2tChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Centre_Utilisateur_ServiceCentre", Storage="_Utilisateur_ServiceCentre", ThisKey="CodeServiceCentre", OtherKey="CodeServiceCentre")]
		public EntitySet<Utilisateur_ServiceCentre> Utilisateur_ServiceCentre
		{
			get
			{
				return this._Utilisateur_ServiceCentre;
			}
			set
			{
				this._Utilisateur_ServiceCentre.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Utilisateur_ServiceCentre(Utilisateur_ServiceCentre entity)
		{
			this.SendPropertyChanging();
			entity.Service_Centre = this;
		}
		
		private void detach_Utilisateur_ServiceCentre(Utilisateur_ServiceCentre entity)
		{
			this.SendPropertyChanging();
			entity.Service_Centre = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypeMateriel")]
	public partial class TypeMateriel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodeTypeMateriel;
		
		private string _TypeMatereil;
		
		private EntitySet<Materiele> _Materiele;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeTypeMaterielChanging(string value);
    partial void OnCodeTypeMaterielChanged();
    partial void OnTypeMatereilChanging(string value);
    partial void OnTypeMatereilChanged();
    #endregion
		
		public TypeMateriel()
		{
			this._Materiele = new EntitySet<Materiele>(new Action<Materiele>(this.attach_Materiele), new Action<Materiele>(this.detach_Materiele));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTypeMateriel", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodeTypeMateriel
		{
			get
			{
				return this._CodeTypeMateriel;
			}
			set
			{
				if ((this._CodeTypeMateriel != value))
				{
					this.OnCodeTypeMaterielChanging(value);
					this.SendPropertyChanging();
					this._CodeTypeMateriel = value;
					this.SendPropertyChanged("CodeTypeMateriel");
					this.OnCodeTypeMaterielChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeMatereil", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string TypeMatereil
		{
			get
			{
				return this._TypeMatereil;
			}
			set
			{
				if ((this._TypeMatereil != value))
				{
					this.OnTypeMatereilChanging(value);
					this.SendPropertyChanging();
					this._TypeMatereil = value;
					this.SendPropertyChanged("TypeMatereil");
					this.OnTypeMatereilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeMateriel_Materiele", Storage="_Materiele", ThisKey="CodeTypeMateriel", OtherKey="CodeTypeMateriel")]
		public EntitySet<Materiele> Materiele
		{
			get
			{
				return this._Materiele;
			}
			set
			{
				this._Materiele.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Materiele(Materiele entity)
		{
			this.SendPropertyChanging();
			entity.TypeMateriel = this;
		}
		
		private void detach_Materiele(Materiele entity)
		{
			this.SendPropertyChanging();
			entity.TypeMateriel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Utili_Materil_Entite")]
	public partial class Utili_Materil_Entite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Matricule;
		
		private string _CodeONEE;
		
		private EntityRef<Materiele> _Materiele;
		
		private EntityRef<Utilisateur> _Utilisateur;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMatriculeChanging(int value);
    partial void OnMatriculeChanged();
    partial void OnCodeONEEChanging(string value);
    partial void OnCodeONEEChanged();
    #endregion
		
		public Utili_Materil_Entite()
		{
			this._Materiele = default(EntityRef<Materiele>);
			this._Utilisateur = default(EntityRef<Utilisateur>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matricule", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Matricule
		{
			get
			{
				return this._Matricule;
			}
			set
			{
				if ((this._Matricule != value))
				{
					if (this._Utilisateur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMatriculeChanging(value);
					this.SendPropertyChanging();
					this._Matricule = value;
					this.SendPropertyChanged("Matricule");
					this.OnMatriculeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeONEE", DbType="VarChar(60) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodeONEE
		{
			get
			{
				return this._CodeONEE;
			}
			set
			{
				if ((this._CodeONEE != value))
				{
					if (this._Materiele.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeONEEChanging(value);
					this.SendPropertyChanging();
					this._CodeONEE = value;
					this.SendPropertyChanged("CodeONEE");
					this.OnCodeONEEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Materiele_Utili_Materil_Entite", Storage="_Materiele", ThisKey="CodeONEE", OtherKey="CodeONEE", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Materiele Materiele
		{
			get
			{
				return this._Materiele.Entity;
			}
			set
			{
				Materiele previousValue = this._Materiele.Entity;
				if (((previousValue != value) 
							|| (this._Materiele.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Materiele.Entity = null;
						previousValue.Utili_Materil_Entite.Remove(this);
					}
					this._Materiele.Entity = value;
					if ((value != null))
					{
						value.Utili_Materil_Entite.Add(this);
						this._CodeONEE = value.CodeONEE;
					}
					else
					{
						this._CodeONEE = default(string);
					}
					this.SendPropertyChanged("Materiele");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilisateur_Utili_Materil_Entite", Storage="_Utilisateur", ThisKey="Matricule", OtherKey="Matricule", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Utilisateur Utilisateur
		{
			get
			{
				return this._Utilisateur.Entity;
			}
			set
			{
				Utilisateur previousValue = this._Utilisateur.Entity;
				if (((previousValue != value) 
							|| (this._Utilisateur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilisateur.Entity = null;
						previousValue.Utili_Materil_Entite.Remove(this);
					}
					this._Utilisateur.Entity = value;
					if ((value != null))
					{
						value.Utili_Materil_Entite.Add(this);
						this._Matricule = value.Matricule;
					}
					else
					{
						this._Matricule = default(int);
					}
					this.SendPropertyChanged("Utilisateur");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Utilisateur")]
	public partial class Utilisateur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Matricule;
		
		private System.Nullable<int> _CodEntite;
		
		private string _Nom;
		
		private string _Prenom;
		
		private EntitySet<Utilisateur_ServiceCentre> _Utilisateur_ServiceCentre;
		
		private EntitySet<Utili_Materil_Entite> _Utili_Materil_Entite;
		
		private EntityRef<Entite> _Entite;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMatriculeChanging(int value);
    partial void OnMatriculeChanged();
    partial void OnCodEntiteChanging(System.Nullable<int> value);
    partial void OnCodEntiteChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnPrenomChanging(string value);
    partial void OnPrenomChanged();
    #endregion
		
		public Utilisateur()
		{
			this._Utilisateur_ServiceCentre = new EntitySet<Utilisateur_ServiceCentre>(new Action<Utilisateur_ServiceCentre>(this.attach_Utilisateur_ServiceCentre), new Action<Utilisateur_ServiceCentre>(this.detach_Utilisateur_ServiceCentre));
			this._Utili_Materil_Entite = new EntitySet<Utili_Materil_Entite>(new Action<Utili_Materil_Entite>(this.attach_Utili_Materil_Entite), new Action<Utili_Materil_Entite>(this.detach_Utili_Materil_Entite));
			this._Entite = default(EntityRef<Entite>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matricule", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Matricule
		{
			get
			{
				return this._Matricule;
			}
			set
			{
				if ((this._Matricule != value))
				{
					this.OnMatriculeChanging(value);
					this.SendPropertyChanging();
					this._Matricule = value;
					this.SendPropertyChanged("Matricule");
					this.OnMatriculeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodEntite", DbType="Int")]
		public System.Nullable<int> CodEntite
		{
			get
			{
				return this._CodEntite;
			}
			set
			{
				if ((this._CodEntite != value))
				{
					if (this._Entite.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodEntiteChanging(value);
					this.SendPropertyChanging();
					this._CodEntite = value;
					this.SendPropertyChanged("CodEntite");
					this.OnCodEntiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenom", DbType="VarChar(60)")]
		public string Prenom
		{
			get
			{
				return this._Prenom;
			}
			set
			{
				if ((this._Prenom != value))
				{
					this.OnPrenomChanging(value);
					this.SendPropertyChanging();
					this._Prenom = value;
					this.SendPropertyChanged("Prenom");
					this.OnPrenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilisateur_Utilisateur_ServiceCentre", Storage="_Utilisateur_ServiceCentre", ThisKey="Matricule", OtherKey="Matricule")]
		public EntitySet<Utilisateur_ServiceCentre> Utilisateur_ServiceCentre
		{
			get
			{
				return this._Utilisateur_ServiceCentre;
			}
			set
			{
				this._Utilisateur_ServiceCentre.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilisateur_Utili_Materil_Entite", Storage="_Utili_Materil_Entite", ThisKey="Matricule", OtherKey="Matricule")]
		public EntitySet<Utili_Materil_Entite> Utili_Materil_Entite
		{
			get
			{
				return this._Utili_Materil_Entite;
			}
			set
			{
				this._Utili_Materil_Entite.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entite_Utilisateur", Storage="_Entite", ThisKey="CodEntite", OtherKey="CodEntite", IsForeignKey=true, DeleteRule="CASCADE")]
		public Entite Entite
		{
			get
			{
				return this._Entite.Entity;
			}
			set
			{
				Entite previousValue = this._Entite.Entity;
				if (((previousValue != value) 
							|| (this._Entite.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entite.Entity = null;
						previousValue.Utilisateur.Remove(this);
					}
					this._Entite.Entity = value;
					if ((value != null))
					{
						value.Utilisateur.Add(this);
						this._CodEntite = value.CodEntite;
					}
					else
					{
						this._CodEntite = default(Nullable<int>);
					}
					this.SendPropertyChanged("Entite");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Utilisateur_ServiceCentre(Utilisateur_ServiceCentre entity)
		{
			this.SendPropertyChanging();
			entity.Utilisateur = this;
		}
		
		private void detach_Utilisateur_ServiceCentre(Utilisateur_ServiceCentre entity)
		{
			this.SendPropertyChanging();
			entity.Utilisateur = null;
		}
		
		private void attach_Utili_Materil_Entite(Utili_Materil_Entite entity)
		{
			this.SendPropertyChanging();
			entity.Utilisateur = this;
		}
		
		private void detach_Utili_Materil_Entite(Utili_Materil_Entite entity)
		{
			this.SendPropertyChanging();
			entity.Utilisateur = null;
		}
	}
}
#pragma warning restore 1591
